package service;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import domain.PagingVO;
import repository.BoardDAO;
import repository.BoardDAOImpl;

public class BoardServiceImpl implements BoardService {
	//로그 객체 선언
	private static final Logger log = 
			LoggerFactory.getLogger(BoardServiceImpl.class);
	//DAO 객체 생성
	private BoardDAO bdao;
	
	public BoardServiceImpl() {
		bdao = new BoardDAOImpl();
	}

	@Override
	public int insert(BoardVO bvo) {
		return bdao.insert(bvo);
	}

	@Override
	public List<BoardVO> selectList() {
		return bdao.selectList();
	}

	@Override
	public BoardVO selectOne(int bno) {
		return bdao.selectOne(bno);
	}

	@Override
	public int readCount(int bno) {
		return bdao.readCount(bno);
	}

	@Override
	public int update(BoardVO bvo) {
		return bdao.update(bvo);
	}

	//comment 먼저 지우고 게시글 삭제
	@Override
	public int delete(int bno) {
		CommentServiceImpl csv = new CommentServiceImpl();
		int cnt = csv.commentCount(bno);
		//cnt가 있으면 지우기
		if(cnt > 0) {
			int isOk = csv.deleteAll(bno);
			log.info("댓글 전체 삭제 완료!");
		}
		return bdao.delete(bno);
	}

	@Override
	public int maxBno() {
		return bdao.maxBno();
	}
	
	//paging
	@Override
	public int getTotalCount(PagingVO pgvo) {
		return bdao.getTotalCount(pgvo);
	}

	@Override
	public List<BoardVO> getPageList(PagingVO pgvo) {
		return bdao.getPageList(pgvo);
	}

	//파일
	@Override
	public String getFileName(int bno) {
		return bdao.getFileName(bno);
	}

	@Override
	public int myTotalCount(String writer) {
		return bdao.myTotalCount(writer);
	}


}
